class Ex6_4 {
	public static void main(String args[]) {
		MyMath mm = new MyMath(); //2
		long result = mm.max(5, 3);//둘 중에 큰값을 반환하는 메서드
		long result1 = mm.add(5, 3); //add메서드 호출 -> 작업-> 8
		long result2 = mm.subtract(5L, 3L);//자동형변환 가능하므로 5,3만 써도 됨
		long result3 = mm.multiply(5L, 3L);
		double result4 = mm.divide(5L, 3L);
		mm.printGugudan(12);
		
		System.out.println("max(5L,3L) = " + result);
		System.out.println("add(5L, 3L) = " + result1);
		System.out.println("subtract(5L, 3L) = " + result2);
		System.out.println("multiply(5L, 3L) = " + result3);
		System.out.println("divide(5L, 3L) = " + result4);
	}
 }

 class MyMath { //1
	 void printGugudan(int dan) {
		 if(!(2<=dan && dan <=9))
return; //입력받은 단(dan)dl 2~9가 아니면 메서드 종료하고 돌아가기
	 for(int i=1;i<=9;i++){
		 System.out.printf("%d*%d = %d%n", dan, i , dan*i);
	 }
	 return;//생략가능
	 }
	long add(long a, long b) {
		long result = a + b; //작업을 마치면 호출한 곳으로 돌아온다.
		return result;
	//	return a + b;	// 위의 두 줄을 이와 같이 한 줄로 간단히 할 수 있다.
	}
	//두 값을 받아서 둘중에 큰 값을 반환하는 메서드를 작성하시오
		long max(long a, long b) {
			if(a>b)
				return a; //조건식이 참일떄만 실행
			else {
				return b; //조건식이 거짓일때 실행
			}
//			if(a>b) {
//				result = a;
//				}else {
//					result = b;
//				}
//				return result;
				}
			
		
	
	
	long subtract(long a, long b) { return a - b; }
	long multiply(long a, long b) { return a * b; }
	double divide(double a, double b) {
		return a / b;
	}
 }
//max(5L,3L) = 5
//add(5L, 3L) = 8
//subtract(5L, 3L) = 2
//multiply(5L, 3L) = 15
//divide(5L, 3L) = 1.6666666666666667
